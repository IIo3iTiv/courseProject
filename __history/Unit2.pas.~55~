unit Unit2;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, System.UITypes,
  Vcl.Buttons, PNGImage, Vcl.DBCtrls;

type
  TForm2 = class(TForm)
    Panel1: TPanel;
    Shape1: TShape;
    Label24: TLabel;
    Panel4: TPanel;
    Label1: TLabel;
    Panel2: TPanel;
    Panel5: TPanel;
    Label3: TLabel;
    Panel7: TPanel;
    Label5: TLabel;
    Panel8: TPanel;
    Label6: TLabel;
    Panel3: TPanel;
    Label2: TLabel;
    Button4: TButton;
    Panel13: TPanel;
    Panel14: TPanel;
    Panel51: TPanel;
    Panel55: TPanel;
    Panel47: TPanel;
    Label14: TLabel;
    Panel48: TPanel;
    Label15: TLabel;
    Panel49: TPanel;
    Label41: TLabel;
    Panel50: TPanel;
    Label17: TLabel;
    Panel56: TPanel;
    Panel54: TPanel;
    Label45: TLabel;
    Panel53: TPanel;
    Label44: TLabel;
    Panel52: TPanel;
    Label43: TLabel;
    Panel9: TPanel;
    Label7: TLabel;
    Panel46: TPanel;
    Shape7: TShape;
    Label42: TLabel;
    Panel15: TPanel;
    Panel19: TPanel;
    Panel20: TPanel;
    Shape2: TShape;
    Panel21: TPanel;
    Panel23: TPanel;
    Label23: TLabel;
    Panel24: TPanel;
    Label25: TLabel;
    Panel25: TPanel;
    Label26: TLabel;
    Panel26: TPanel;
    Label27: TLabel;
    Panel27: TPanel;
    Label28: TLabel;
    Timer1: TTimer;
    Image2: TImage;
    Panel6: TPanel;
    Image3: TImage;
    Panel10: TPanel;
    Label4: TLabel;
    Edit5: TEdit;
    Panel11: TPanel;
    Label8: TLabel;
    Edit6: TEdit;
    Panel12: TPanel;
    Label9: TLabel;
    Edit7: TEdit;
    Panel16: TPanel;
    Label10: TLabel;
    ListBox1: TListBox;
    Panel17: TPanel;
    Label12: TLabel;
    Panel18: TPanel;
    Label13: TLabel;
    Edit1: TEdit;
    Panel22: TPanel;
    Label16: TLabel;
    Panel28: TPanel;
    ComboBox1: TComboBox;
    Edit2: TEdit;
    Panel37: TPanel;
    Shape5: TShape;
    Label38: TLabel;
    Shape3: TShape;
    Label22: TLabel;
    Button1: TButton;
    ComboBox2: TComboBox;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure Shape2MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Label9Click(Sender: TObject);
    procedure Label22Click(Sender: TObject);
    procedure Label23Click(Sender: TObject);
    procedure Label25Click(Sender: TObject);
    procedure Label26Click(Sender: TObject);
    procedure Label27Click(Sender: TObject);
    procedure Label28Click(Sender: TObject);
    procedure Label14MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure Label14MouseLeave(Sender: TObject);
    procedure Label14MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Label15MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure Label15MouseLeave(Sender: TObject);
    procedure Label15MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Label41MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure Label41MouseLeave(Sender: TObject);
    procedure Label41MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Label17MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure Label17MouseLeave(Sender: TObject);
    procedure Label17MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Label7MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure Label7MouseLeave(Sender: TObject);
    procedure Label7MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Label44MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure Label44MouseLeave(Sender: TObject);
    procedure Label44MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Label43MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure Label43MouseLeave(Sender: TObject);
    procedure Label43MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Label45MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure Label45MouseLeave(Sender: TObject);
    procedure Label45MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Label2MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure Label2MouseLeave(Sender: TObject);
    procedure Label2MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Label3MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure Label3MouseLeave(Sender: TObject);
    procedure Label3MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Label5MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure Label5MouseLeave(Sender: TObject);
    procedure Label5MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Label6MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure Label6MouseLeave(Sender: TObject);
    procedure Label6MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Label2Click(Sender: TObject);
    procedure Label3Click(Sender: TObject);
    procedure Label38MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure Label38MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure Label38MouseLeave(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure Label17Click(Sender: TObject);
    procedure Label41Click(Sender: TObject);
    procedure Edit5Enter(Sender: TObject);
    procedure Edit6Enter(Sender: TObject);
    procedure Edit7Enter(Sender: TObject);
    procedure ListBox1DrawItem(Control: TWinControl; Index: Integer;
      Rect: TRect; State: TOwnerDrawState);
    procedure ListBox1Enter(Sender: TObject);
    procedure Image1Click(Sender: TObject);
    procedure ComboBox1DrawItem(Control: TWinControl; Index: Integer;
      Rect: TRect; State: TOwnerDrawState);
    procedure ComboBox1Change(Sender: TObject);
    procedure ComboBox2Change(Sender: TObject);
    procedure ComboBox2DrawItem(Control: TWinControl; Index: Integer;
      Rect: TRect; State: TOwnerDrawState);
    procedure ListBox1Click(Sender: TObject);
    procedure Label15Click(Sender: TObject);
    procedure Label14Click(Sender: TObject);
    procedure Label7Click(Sender: TObject);
    procedure Label44Click(Sender: TObject);
    procedure Edit5KeyPress(Sender: TObject; var Key: Char);
    procedure Edit6KeyPress(Sender: TObject; var Key: Char);
  private

    procedure setViewMode;
    procedure showFilter;
    procedure setEditMode;
    procedure addRecord;      // Добавить запись
    procedure delRecord;      // Удалить запись
    procedure savRecord;      // Сохранить запись
    procedure chnRecord;      // Изменить запись
    procedure uploadData;    // Загрузить данные
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form2: TForm2;
  filter, editMode, newRecord, changes: boolean;
  idMovie: array[0 .. 100] of integer;

implementation

{$R *.dfm}

uses Unit1, Unit3, Unit4;

procedure TForm2.showFilter;
begin
   filter := not(filter);
end;

procedure TForm2.Timer1Timer(Sender: TObject);
begin
  if (filter) and (Panel15.Left < 955) then
    Panel15.Left := Panel15.Left + 5;

  if (not filter) and (Panel15.Left > 616) then
    Panel15.Left := Panel15.Left - 5;
end;

procedure TForm2.ComboBox1Change(Sender: TObject);
begin
  Button1.SetFocus;
end;

procedure TForm2.ComboBox1DrawItem(Control: TWinControl; Index: Integer;
  Rect: TRect; State: TOwnerDrawState);
begin
  with ComboBox1 do
  begin
    if odSelected in State then
    begin
      Canvas.Brush.Color := RGB(214, 16, 77);
    end
    else
    begin
      Canvas.Brush.Color := RGB(26, 20, 59);
    end;
    Canvas.FillRect(Rect);

    Canvas.TextOut(Rect.Left + 2, Rect.Top + 2, Items[Index]);
    if odFocused in State then Canvas.DrawFocusRect(Rect);
  end;
end;

procedure TForm2.ComboBox2Change(Sender: TObject);
begin
  Button1.SetFocus;
end;

procedure TForm2.ComboBox2DrawItem(Control: TWinControl; Index: Integer;
  Rect: TRect; State: TOwnerDrawState);
begin
  with ComboBox2 do
  begin
    if odSelected in State then
    begin
      Canvas.Brush.Color := RGB(214, 16, 77);
    end
    else
    begin
      Canvas.Brush.Color := RGB(26, 20, 59);
    end;
    Canvas.FillRect(Rect);

    Canvas.TextOut(Rect.Left + 2, Rect.Top + 2, Items[Index]);
    if odFocused in State then Canvas.DrawFocusRect(Rect);
  end;
end;

procedure TForm2.Edit5Enter(Sender: TObject);
begin
  if Not(editMode) then
  begin
    Button1.SetFocus;
  end;
end;

procedure TForm2.Edit5KeyPress(Sender: TObject; var Key: Char);
begin
  мcase Key of
    'а' .. 'я': ;
    'А' .. 'Я': ;
    #8: ;
    #13: ;
    #32: ;
    #3, #22: ;
    else Key := Chr(0);
  end;
end;

procedure TForm2.Edit6Enter(Sender: TObject);
begin
  if Not(editMode) then
  begin
    Button1.SetFocus;
  end;
end;

procedure TForm2.Edit6KeyPress(Sender: TObject; var Key: Char);
begin
  case Key of
    '0' .. '9': ;
    #8: ;
    #13: ;
    #3, #22: ;
    '.': ;
    else Key := Chr(0);
  end;
end;

procedure TForm2.Edit7Enter(Sender: TObject);
begin
  if Not(editMode) then
  begin
    Button1.SetFocus;
  end;
end;

procedure TForm2.FormActivate(Sender: TObject);
begin
  editMode := false;
  newRecord := false;
  setViewMode;
  DataModule.TActors.First;
  uploadData;
end;

procedure TForm2.FormClose(Sender: TObject; var Action: TCloseAction);
begin
   Form1.Show;
end;

procedure TForm2.FormCreate(Sender: TObject);
begin
  filter := true;

  // Верхняя
  Panel1.Color := RGB(248, 16, 77);
  Shape1.Brush.Color := RGB(40, 31, 85);
  Panel2.Color := RGB(40, 31, 85);

  // Серцевина
  Panel13.Color := RGB(26, 20, 59);
  ListBox1.Color := RGB(26, 20, 59);

  // Нижняя
  Panel51.Color := RGB(40, 31, 85);
  Shape7.Brush.Color := RGB(248, 16, 77);
  Panel46.Color := RGB(248, 16, 77);

  // Фильтр
  Label22.Font.Color := RGB(13, 156, 50);
  Label23.Font.Color := RGB(13, 156, 50);
  Label25.Font.Color := RGB(13, 156, 50);
  Label26.Font.Color := RGB(13, 156, 50);
  Label27.Font.Color := RGB(13, 156, 50);
  Label28.Font.Color := RGB(13, 156, 50);
  Shape3.Pen.Color := RGB(13, 156, 50);
  Shape2.Pen.Color := RGB(13, 156, 50);
  Shape3.Brush.Color := RGB(26, 20, 59);
  Shape2.Brush.Color := RGB(26, 20, 59);
  Edit1.Color := RGB(26, 20, 59);
  Label38.Font.Color := RGB(13, 156, 50);
  Shape5.Pen.Color := RGB(13, 156, 50);
  ComboBox1.Color := RGB(26, 20, 59);
  ComboBox2.Color := RGB(26, 20, 59);
  Edit2.Color := RGB(26, 20, 59);
end;

procedure TForm2.setViewMode;
begin
  editMode := false;

  Edit5.Color := RGB(26, 20, 59);
  Edit5.BorderStyle := bsNone;
  Edit5.Font.Color := clCream;
  Edit5.ReadOnly := true;
  Edit5.Cursor := crArrow;
  Edit5.Align := alNone;
  Edit5.Top := 8;

  Edit6.Color := RGB(26, 20, 59);
  Edit6.BorderStyle := bsNone;
  Edit6.Font.Color := clCream;
  Edit6.ReadOnly := true;
  Edit6.Cursor := crArrow;
  Edit6.Align := alNone;
  Edit6.Top := 8;

  Edit7.Color := RGB(26, 20, 59);
  Edit7.BorderStyle := bsNone;
  Edit7.Font.Color := clCream;
  Edit7.ReadOnly := true;
  Edit7.Cursor := crArrow;
  Edit7.Align := alNone;
  Edit7.Top := 8;

  Panel15.Visible := true;

end;

procedure TForm2.setEditMode;
begin
  editMode := true;

  Edit5.Color := clCream;
  Edit5.BorderStyle := bsSingle;
  Edit5.Font.Color := clWindowText;
  Edit5.ReadOnly := false;
  Edit5.Cursor := crDefault;
  Edit5.Align := alClient;
  Edit5.Top := 3;

  Edit6.Color := clCream;
  Edit6.BorderStyle := bsSingle;
  Edit6.Font.Color := clWindowText;
  Edit6.ReadOnly := false;
  Edit6.Cursor := crDefault;
  Edit6.Align := alClient;
  Edit6.Top := 3;

  Edit7.Color := clCream;
  Edit7.BorderStyle := bsSingle;
  Edit7.Font.Color := clWindowText;
  Edit7.ReadOnly := false;
  Edit7.Cursor := crDefault;
  Edit7.Align := alClient;
  Edit7.Top := 3;

  ListBox1.ClearSelection;
  Panel15.Visible := false;

end;

procedure TForm2.Image1Click(Sender: TObject);
begin
  Form2.Hide;
  Form1.Show;
end;

procedure TForm2.Label14Click(Sender: TObject);
begin
  if Not(editMode) then
     begin
       DataModule.TActors.First;
       uploadData;
     end
   else
     begin
         savRecord;
         editMode := false;
         setViewMode;
         DataModule.TActors.First;
         uploadData;
     end;
end;

procedure TForm2.Label14MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  Label14.Font.Color := RGB(210, 17, 77);
end;

procedure TForm2.Label14MouseLeave(Sender: TObject);
begin
  Label14.Font.Color := clCream;
end;

procedure TForm2.Label14MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Label14.Font.Color := RGB(248, 16, 77);
end;

procedure TForm2.Label15Click(Sender: TObject);
begin
  if Not(editMode) then
     begin
       DataModule.TActors.Prior;
       uploadData;
     end
   else
     begin
         savRecord;
         editMode := false;
         setViewMode;
         DataModule.TActors.Prior;
         uploadData;
     end;
end;

procedure TForm2.Label15MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  Label15.Font.Color := RGB(210, 17, 77);
end;

procedure TForm2.Label15MouseLeave(Sender: TObject);
begin
  Label15.Font.Color := clCream;
end;

procedure TForm2.Label15MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Label15.Font.Color := RGB(248, 16, 77);
end;

procedure TForm2.Label17Click(Sender: TObject);
begin
  if Not(editMode) then
     begin
       DataModule.TActors.Last;
       uploadData;
     end
   else
     begin
         savRecord;
         editMode := false;
         setViewMode;
         DataModule.TActors.Last;
         uploadData;
     end;
end;

procedure TForm2.Label17MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  Label17.Font.Color := RGB(210, 17, 77);
end;

procedure TForm2.Label17MouseLeave(Sender: TObject);
begin
  Label17.Font.Color := clCream;
end;

procedure TForm2.Label17MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Label17.Font.Color := RGB(248, 16, 77);
end;

procedure TForm2.Label22Click(Sender: TObject);
begin
  showFilter;
end;

procedure TForm2.Label23Click(Sender: TObject);
begin
  showFilter;
end;

procedure TForm2.Label25Click(Sender: TObject);
begin
  showFilter;
end;

procedure TForm2.Label26Click(Sender: TObject);
begin
  showFilter;
end;

procedure TForm2.Label27Click(Sender: TObject);
begin
  showFilter;
end;

procedure TForm2.Label28Click(Sender: TObject);
begin
  showFilter;
end;

procedure TForm2.Label2Click(Sender: TObject);
begin
  Form2.Hide;
  Form1.Show;
end;

procedure TForm2.Label2MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  Label2.Font.Color := RGB(210, 17, 77);
end;

procedure TForm2.Label2MouseLeave(Sender: TObject);
begin
  Label2.Font.Color := clCream;
end;

procedure TForm2.Label2MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Label2.Font.Color := RGB(248, 16, 77);
end;

procedure TForm2.Label3Click(Sender: TObject);
begin
  Form2.Hide;
  Form3.Show;
end;

procedure TForm2.Label3MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  Label3.Font.Color := RGB(210, 17, 77);
end;

procedure TForm2.Label3MouseLeave(Sender: TObject);
begin
  Label3.Font.Color := clCream;
end;

procedure TForm2.Label3MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Label3.Font.Color := RGB(248, 16, 77);
end;

procedure TForm2.Label41Click(Sender: TObject);
begin
  if Not(editMode) then
     begin
       DataModule.TActors.Next;
       uploadData;
     end
   else
     begin
         savRecord;
         editMode := false;
         setViewMode;
         DataModule.TActors.Next;
         uploadData;
     end;
end;

procedure TForm2.Label41MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  Label41.Font.Color := RGB(210, 17, 77);
end;

procedure TForm2.Label41MouseLeave(Sender: TObject);
begin
  Label41.Font.Color := clCream;
end;

procedure TForm2.Label41MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Label41.Font.Color := RGB(248, 16, 77);
end;

procedure TForm2.Label43MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  Label43.Font.Color := RGB(210, 17, 77);
end;

procedure TForm2.Label43MouseLeave(Sender: TObject);
begin
  Label43.Font.Color := clCream;
end;

procedure TForm2.Label43MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Label43.Font.Color := RGB(248, 16, 77);
end;

procedure TForm2.Label44Click(Sender: TObject);
begin
  savRecord;
end;

procedure TForm2.Label44MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  Label44.Font.Color := RGB(210, 17, 77);
end;

procedure TForm2.Label44MouseLeave(Sender: TObject);
begin
  Label44.Font.Color := clCream;
end;

procedure TForm2.Label44MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Label44.Font.Color := RGB(248, 16, 77);
end;

procedure TForm2.Label45MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  Label45.Font.Color := RGB(210, 17, 77);
end;

procedure TForm2.Label45MouseLeave(Sender: TObject);
begin
  Label45.Font.Color := clCream;
end;

procedure TForm2.Label45MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Label45.Font.Color := RGB(248, 16, 77);
end;

procedure TForm2.Label5MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  Label5.Font.Color := RGB(210, 17, 77);
end;

procedure TForm2.Label5MouseLeave(Sender: TObject);
begin
  Label5.Font.Color := clCream;
end;

procedure TForm2.Label5MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Label5.Font.Color := RGB(248, 16, 77);
end;

procedure TForm2.Label6MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  Label6.Font.Color := RGB(210, 17, 77);
end;

procedure TForm2.Label6MouseLeave(Sender: TObject);
begin
  Label6.Font.Color := clCream;
end;

procedure TForm2.Label6MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Label6.Font.Color := RGB(248, 16, 77);
end;

procedure TForm2.Label7Click(Sender: TObject);
begin
  chnRecord;
end;

procedure TForm2.Label7MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  Label7.Font.Color := RGB(210, 17, 77);
end;

procedure TForm2.Label7MouseLeave(Sender: TObject);
begin
  Label7.Font.Color := clCream;
end;

procedure TForm2.Label7MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Label7.Font.Color := RGB(248, 16, 77);
end;

procedure TForm2.Label9Click(Sender: TObject);
begin
   Form1.Show;
end;

procedure TForm2.ListBox1Click(Sender: TObject);
begin
  Button4.SetFocus;
end;

procedure TForm2.ListBox1DrawItem(Control: TWinControl; Index: Integer;
  Rect: TRect; State: TOwnerDrawState);
begin
  with ListBox1.Canvas do begin
    if odSelected in State then
      Brush.Color := RGB(248, 16, 77)
    else
      Brush.Color := RGB(26, 20, 59);

    FillRect(Rect);
    TextOut(Rect.Left + 7, Rect.Top + 3, ListBox1.Items[Index]);
    if odFocused in State then DrawFocusRect(Rect);
  end;
end;

procedure TForm2.ListBox1Enter(Sender: TObject);
begin
  if editMode then
    Button4.SetFocus;
end;

procedure TForm2.Shape2MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  showFilter;
end;

procedure TForm2.Label38MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
begin
  Label38.Font.Color := clCream;
  Shape5.Pen.Color := RGB(248, 16, 77);
end;

procedure TForm2.Label38MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  Label38.Font.Color := RGB(230, 230, 230);
  Shape5.Pen.Color := RGB(210, 17, 77);
end;

procedure TForm2.Label38MouseLeave(Sender: TObject);
begin
  Label38.Font.Color := RGB(13, 156, 50);
  Shape5.Pen.Color := RGB(13, 156, 50);
end;

procedure TForm2.addRecord;      // Добавить запись
begin

end;

procedure TForm2.delRecord;      // Удалить запись
begin

end;

procedure TForm2.savRecord;      // Сохранить запись
var btnSel: integer;
begin

  changes := false;
  if Not(newRecord) And (editMode) then
  begin
    DataModule.Request.SQL.Clear;
    DataModule.Request.SQL.Text := 'UPDATE Actors SET DateBirth = :date, fullName = :name, countFilms = :count '
                                 + 'WHERE Id = ' + IntToStr(DataModule.TActorsId.Value);

    DataModule.Request.Parameters.ParamByName('name').Value := Edit5.Text;
    DataModule.Request.Parameters.ParamByName('date').Value := Edit6.Text;
    DataModule.Request.Parameters.ParamByName('count').Value := Edit7.Text;

    if DataModule.TActorsfullName.Value <> Edit5.Text then changes := true;
    if DataModule.TActorsDateBirth.Value <> StrToDateTime(Edit6.Text) then changes := true;
    if DataModule.TActorscountFilms.Value <> StrToInt(Edit7.Text) then changes := true;

    if changes then
    begin
      btnSel := MessageDlg('Были внесены изменения. Хотите ли вы их сохранить?', mtConfirmation, mbYesNo, 0);
      if btnSel = mrYes then
        DataModule.Request.ExecSQL;
      DataModule.TActors.Refresh;
    end;

    setViewMode;
    uploadData;

  end;

end;

procedure TForm2.chnRecord;      // Изменить запись
begin
  editMode := true;
  setEditMode;
  uploadData;
end;

procedure TForm2.uploadData;    // Загрузить данные
var id, i: integer;
    date: string;
begin

  id := DataModule.TActorsId.Value;

  // Фото
  if FileExists('img/Actors/' + IntToStr(id) + '.jpg') then
    Image3.Picture.LoadFromFile('img/Actors/' + IntToStr(id) + '.jpg')
  else
    Image3.Picture.LoadFromFile('img/Actors/0.jpg');

  // Актёр
  Edit5.Text := DataModule.TActorsfullName.Value;

  // Дата рождения
  if Not(editMode) then
  begin
    DateTimeToString(date, 'dddddd', DataModule.TActorsDateBirth.Value);
    Edit6.Text := date;
  end
  else
  begin
    DateTimeToString(date, 'ddddd', DataModule.TActorsDateBirth.Value);
    Edit6.Text := date;
  end;

  // Количество фильмов
  Edit7.Text := IntToStr(DataModule.TActorscountFilms.Value);

  // Фильмы
  DataModule.Request.SQL.Clear;
  DataModule.Request.SQL.Text := 'SELECT m.titleMovie, m.Id '
                               + 'FROM Movie AS m '
                               + 'INNER JOIN (SELECT ma.idMovie '
                               + '            FROM [Movie - Actors] AS ma '
                               + '            INNER JOIN Actors AS a '
                               + '            ON ma.idActors = a.Id '
                               + '            WHERE a.Id = ' + IntToStr(id) + ') AS ma '
                               + 'ON m.Id = ma.idMovie ';
  DataModule.Request.Active := true;

  i := 0;
  ListBox1.Clear;
  while Not(DataModule.Request.Eof) do
  begin
    ListBox1.Items.Add(DataModule.Request.Fields[0].AsString);
    idMovie[i] := DataModule.Request.Fields[1].AsInteger;
    DataModule.Request.Next;
    Inc(i);
  end;


end;

end.
